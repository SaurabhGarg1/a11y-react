{"version":3,"sources":["Dialog/Dialog.js","Menu/MenuItem.js","Menu/Menu.js","Radio/Radio.js","App.js","reportWebVitals.js","index.js"],"names":["Dialog","onClose","domNodeFn","contentRef","useRef","nodeToRestore","useEffect","focusableElements","current","querySelectorAll","firstFocusableEl","lastFocusableEl","length","focus","doc","ownerDocument","handleKeyDown","e","keyCode","shiftKey","activeElement","preventDefault","addEventListener","removeEventListener","useMemo","ReactDOM","createPortal","className","ref","role","aria-labelledby","id","type","name","placeholder","onClick","getContainer","container","findDOMNode","node","document","ShowDialog","useState","dialogOpen","setDialogOpen","MenuItem","item","isSelected","onMouseEnter","onMouseLeave","itemRef","tabIndex","menuItems","Menu","isMenuOpen","setIsMenuOpen","selectedItem","setSelectedItem","aria-expanded","aria-label","onKeyDown","map","index","Radio","value","htmlFor","App","rootRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","getElementById"],"mappings":"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","file":"static/js/main.16bf604b.chunk.js","sourcesContent":["import { useState, useRef, useEffect, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Dialog.css\";\n\nconst FOCUSABLE_ELEMENT_SELECTORS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, [tabindex=\"0\"], [contenteditable]';\n\n// inspired by Material-ui modal https://github.com/mui-org/material-ui/tree/e168bc694a7c7a59e86990e2a3677938acf7e953/packages/material-ui/src/Modal\nconst Dialog = ({ onClose, domNodeFn }) => {\n  const contentRef = useRef(null);\n  const nodeToRestore = useRef(null);\n  useEffect(() => {\n    const focusableElements = contentRef.current.querySelectorAll(\n      FOCUSABLE_ELEMENT_SELECTORS\n    );\n    const firstFocusableEl = focusableElements[0],\n      lastFocusableEl = focusableElements[focusableElements.length - 1];\n    firstFocusableEl.focus();\n    const doc = ownerDocument(contentRef.current);\n\n    const handleKeyDown = e => {\n      if (e.keyCode === 9) {\n        // tab key\n        if (e.shiftKey && doc.activeElement === firstFocusableEl) {\n          e.preventDefault();\n          lastFocusableEl.focus();\n        } else if (!e.shiftKey && doc.activeElement === lastFocusableEl) {\n          e.preventDefault();\n          firstFocusableEl.focus();\n        }\n      } else if (e.keyCode === 27) {\n        //  Esc key\n        onClose();\n      }\n    };\n    doc.addEventListener(\"keydown\", handleKeyDown, true);\n    return () => {\n      doc.removeEventListener(\"keydown\", handleKeyDown, true);\n      if (nodeToRestore.current) {\n        nodeToRestore.current.focus();\n      }\n    };\n  }, [onClose]);\n\n  useMemo(() => {\n    nodeToRestore.current = ownerDocument(domNodeFn()).activeElement;\n  }, [domNodeFn]);\n\n  return ReactDOM.createPortal(\n    <>\n      <div\n        className=\"dialog-window\"\n        ref={contentRef}\n        role=\"dialog\"\n        aria-labelledby=\"dialog_title\"\n      >\n        <h3 id=\"dialog_title\">This is my dialog</h3>\n        <input type=\"text\" name=\"search\" placeholder=\"Enter your name\" />\n        <button id=\"searchbutton\" type=\"submit\" onClick={onClose}>\n          Ok\n        </button>\n      </div>\n      <div className=\"dialog-mask\"></div>\n    </>,\n    getContainer(domNodeFn)\n  );\n};\n\nconst getContainer = container => {\n  container = typeof container === \"function\" ? container() : container;\n  return ReactDOM.findDOMNode(container);\n};\n\nfunction ownerDocument(node) {\n  return (node && node.ownerDocument) || document;\n}\n\nexport const ShowDialog = ({ domNodeFn }) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  return (\n    <>\n      <button onClick={() => setDialogOpen(true)} className=\"show-dialog\">\n        Show dialog\n      </button>\n      {dialogOpen && (\n        <Dialog onClose={() => setDialogOpen(false)} domNodeFn={domNodeFn} />\n      )}\n    </>\n  );\n};\n","import { useEffect, useRef } from \"react\";\nimport \"./MenuItem.css\";\n\nconst MenuItem = ({ item, isSelected, onMouseEnter, onMouseLeave }) => {\n  const itemRef = useRef(null);\n  useEffect(() => {\n    if (isSelected) {\n      itemRef.current.focus();\n    }\n  }, [isSelected]);\n  return (\n    <li\n      role=\"menuitem\"\n      tabIndex={isSelected ? 0 : -1}\n      ref={itemRef}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      {item}\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import { useState } from \"react\";\nimport \"./Menu.css\";\nimport MenuItem from \"./MenuItem\";\n\nconst menuItems = [\"Inbox\", \"Draft\", \"Sent Items\", \"Junk\"];\n\nexport function Menu() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(0);\n  const handleKeyDown = e => {\n    const { keyCode } = e;\n    switch (keyCode) {\n      // up or left key\n      case 37:\n      case 38: {\n        if (selectedItem > 0) {\n          setSelectedItem(selectedItem - 1);\n        } else {\n          setSelectedItem(menuItems.length - 1);\n        }\n        break;\n      }\n      // down or right key\n      case 39:\n      case 40: {\n        if (selectedItem < menuItems.length - 1) {\n          setSelectedItem(selectedItem + 1);\n        } else {\n          setSelectedItem(0);\n        }\n        break;\n      }\n      default: {\n      }\n    }\n  };\n  return (\n    <>\n      <button\n        onClick={() => {\n          setIsMenuOpen(!isMenuOpen);\n        }}\n        aria-expanded={isMenuOpen}\n        className=\"mail\"\n      >\n        Mail\n      </button>\n      {isMenuOpen && (\n        <ul\n          role=\"menu\"\n          className=\"menu\"\n          aria-label=\"Open menu\"\n          onKeyDown={e => handleKeyDown(e)}\n        >\n          {menuItems.map((item, index) => (\n            <MenuItem\n              key={index}\n              item={item}\n              isSelected={selectedItem === index}\n              onMouseEnter={() => setSelectedItem(index)}\n              onMouseLeave={() => setSelectedItem(-1)}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","export const Radio = () => {\n  return (\n    <>\n      <p>Select a maintenance drone:</p>\n      <div>\n        <input type=\"radio\" id=\"huey\" name=\"drone\" value=\"huey\" />\n        <label htmlFor=\"huey\">Huey</label>\n      </div>\n\n      <div>\n        <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\" />\n        <label htmlFor=\"dewey\">Dewey</label>\n      </div>\n\n      <div>\n        <input type=\"radio\" id=\"louie\" name=\"drone\" value=\"louie\" />\n        <label htmlFor=\"louie\">Louie</label>\n      </div>\n    </>\n  );\n};\n","import \"./App.css\";\nimport { ShowDialog } from \"./Dialog/Dialog\";\nimport { Menu } from \"./Menu/Menu\";\nimport { Radio } from \"./Radio/Radio\";\nimport { useRef } from \"react\";\n\nfunction App() {\n  const rootRef = useRef(null);\n  return (\n    <div ref={rootRef}>\n      <header className=\"App-header\">\n        <h1>Accessible components</h1>\n      </header>\n      <main>\n        <h2>Menu</h2>\n        <Menu />\n        <h2>Radio (Native)</h2>\n        <Radio />\n        <ShowDialog domNodeFn={() => rootRef.current} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}